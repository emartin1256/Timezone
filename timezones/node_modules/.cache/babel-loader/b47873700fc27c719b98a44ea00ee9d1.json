{"ast":null,"code":"var _jsxFileName = \"/Users/elliotmartin/Downloads/Dev/timezones/src/card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Index(props) {\n  _s();\n\n  useEffect(() => {\n    var timer = setInterval(() => setCurTime(new Date().toLocaleTimeString()), 1000);\n    return function cleanup() {\n      clearInterval(timer);\n    };\n  });\n\n  const setTime = () => {\n    var time = props.curTime;\n    var offSet = props.timezones.Hours._text;\n    var [h, m, s] = time.split(\":\");\n    var newTime = String(Math.abs(Number(h) + Number(offSet))) + `:${m}:${s}`;\n    console.log(newTime);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"zone\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.timezones.Name._text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"GMT\", props.timezones.Hours._text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.curTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: setTime,\n        children: \"button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Index, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/elliotmartin/Downloads/Dev/timezones/src/card.js"],"names":["React","useEffect","Index","props","timer","setInterval","setCurTime","Date","toLocaleTimeString","cleanup","clearInterval","setTime","time","curTime","offSet","timezones","Hours","_text","h","m","s","split","newTime","String","Math","abs","Number","console","log","Name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACpBF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIG,KAAK,GAAGC,WAAW,CACrB,MAAMC,UAAU,CAAC,IAAIC,IAAJ,GAAWC,kBAAX,EAAD,CADK,EAErB,IAFqB,CAAvB;AAIA,WAAO,SAASC,OAAT,GAAmB;AACxBC,MAAAA,aAAa,CAACN,KAAD,CAAb;AACD,KAFD;AAGD,GARQ,CAAT;;AASA,QAAMO,OAAO,GAAG,MAAM;AACpB,QAAIC,IAAI,GAAGT,KAAK,CAACU,OAAjB;AACA,QAAIC,MAAM,GAAGX,KAAK,CAACY,SAAN,CAAgBC,KAAhB,CAAsBC,KAAnC;AACA,QAAI,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,IAAYR,IAAI,CAACS,KAAL,CAAW,GAAX,CAAhB;AACA,QAAIC,OAAO,GAAGC,MAAM,CAACC,IAAI,CAACC,GAAL,CAASC,MAAM,CAACR,CAAD,CAAN,GAAYQ,MAAM,CAACZ,MAAD,CAA3B,CAAD,CAAN,GAAgD,IAAGK,CAAE,IAAGC,CAAE,EAAxE;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AACD,GAND;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAA,kBAAKnB,KAAK,CAACY,SAAN,CAAgBc,IAAhB,CAAqBZ;AAA1B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,0BAAQd,KAAK,CAACY,SAAN,CAAgBC,KAAhB,CAAsBC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BAEE;AAAA,kBAAId,KAAK,CAACU;AAAV;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAEF,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GA9BQT,K;;KAAAA,K;AAgCT,eAAeA,KAAf","sourcesContent":["import React, { useEffect } from \"react\";\n\nfunction Index(props) {\n  useEffect(() => {\n    var timer = setInterval(\n      () => setCurTime(new Date().toLocaleTimeString()),\n      1000\n    );\n    return function cleanup() {\n      clearInterval(timer);\n    };\n  });\n  const setTime = () => {\n    var time = props.curTime;\n    var offSet = props.timezones.Hours._text;\n    var [h, m, s] = time.split(\":\");\n    var newTime = String(Math.abs(Number(h) + Number(offSet))) + `:${m}:${s}`;\n    console.log(newTime);\n  };\n  return (\n    <div className=\"card\">\n      <div className=\"zone\">\n        <h1>{props.timezones.Name._text}</h1>\n        <h3>GMT{props.timezones.Hours._text}</h3>\n      </div>\n      <div className=\"time\">\n        {/* <p>17:30:47</p> */}\n        <p>{props.curTime}</p>\n        <button onClick={setTime}>button</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}